services:

  db:
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres

  app:
    command:
      - /bin/sh
      - -c
      - |
        python manage.py runserver 0.0.0.0:9000
    environment:
      DEBUG : 'true'
      DJANGO_SECRET_KEY : WOOOOOOOOWOOOOOOOOWWW
      POSTGRES_HOST : db
      POSTGRES_PASSWORD : postgres
      POSTGRES_DB : postgres
      POSTGRES_USER : postgres
    volumes:
      - .:/code
    ports:
      - "9000:9000"
    depends_on:
      frontend-builder:
        condition: service_completed_successfully
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      db_init:
        condition: service_completed_successfully

  celery:
    environment:
      - DJANGO_SECRET_KEY=WOOOOOOOOWOOOOOOOOWWW
      - POSTGRES_HOST=db
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
    volumes:
      - .:/code

  db_init:
    build:
      context: .
    command:
      - /bin/sh
      - -c
      - |
        python manage.py makemigrations app
        python manage.py migrate
        python manage.py createsuperuser --noinput || true
    volumes:
      - .:/code
    working_dir: /code
    environment:
      - DJANGO_SECRET_KEY=WOOOOOOOOWOOOOOOOOWWW
      - POSTGRES_HOST=db
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - DJANGO_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_PASSWORD=password
      - DJANGO_SUPERUSER_EMAIL=admin@example.com
    depends_on:
      db:
        condition: service_healthy

  frontend-builder:
    image: node:19.4.0
    command:
      - /bin/sh
      - -c
      - |
        npm install
        npm run build
    working_dir: /app
    volumes:
      - ./app:/app
