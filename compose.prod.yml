services:
  db:
    volumes:
      - youtube_downloader_db:/var/lib/postgresql/data
    env_file:
      - prod.env
    networks:
      - app_network
      
  app:
    volumes:
      - youtube_downloader:/code/data
    env_file:
      - prod.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      db_init:
        condition: service_completed_successfully
    networks:
      - app_network

  celery:
    volumes:
      - youtube_downloader:/code/data
    env_file:
      - prod.env
    networks:
      - app_network

    
  nginx:
    image: nginxinc/nginx-unprivileged
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - app_assets:/var/www/html
    ports:
      - "8080:8080"
    depends_on:
      collect_static:
        condition: service_completed_successfully
      app:
        condition: service_healthy
    networks:
      - app_network

  collect_static:
    image: youtube_downloader
    command:
      - /bin/sh
      - -c
      - |
        python manage.py collectstatic --noinput
    volumes:
      - app_assets:/var/www/html
    working_dir: /code
    env_file:
      - prod.env

  db_init:
    image: youtube_downloader
    command:
      - /bin/sh
      - -c
      - |
        python manage.py migrate
    working_dir: /code
    env_file:
      - prod.env
    networks:
      - app_network

  # Redis Service
  redis:
    networks:
      - app_network

volumes:
  app_assets:
  youtube_downloader_db:
    # external: true
  youtube_downloader:
    # external: true

networks:
  app_network:
    external: true